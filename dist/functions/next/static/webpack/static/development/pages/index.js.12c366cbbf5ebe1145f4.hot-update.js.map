{"version":3,"file":"static/webpack/static/development/pages/index.js.12c366cbbf5ebe1145f4.hot-update.js","sources":["webpack:///./containers/Interior/Team/index.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Fade from 'react-reveal/Fade';\r\nimport Text from 'reusecore/src/elements/Text';\r\nimport Heading from 'reusecore/src/elements/Heading';\r\nimport Image from 'reusecore/src/elements/Image';\r\nimport Container from 'common/src/components/UI/Container';\r\nimport GlideCarousel from 'common/src/components/GlideCarousel';\r\nimport GlideSlide from 'common/src/components/GlideCarousel/glideSlide';\r\nimport { SectionHeader, CircleLoader } from '../interior.style';\r\nimport SectionWrapper, {\r\n  TeamCard,\r\n  ImageWrapper,\r\n  TextWrapper,\r\n  CarouselWrapper,\r\n} from './team.style';\r\n\r\nimport { teamData } from 'common/src/data/Interior';\r\n\r\nconst Team = () => {\r\n  const { title, slogan, members } = teamData;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const glideOptions = {\r\n    type: 'carousel',\r\n    perView: 3,\r\n    gap: 50,\r\n    breakpoints: {\r\n      1200: {\r\n        perView: 3,\r\n        gap: 30,\r\n      },\r\n      767: {\r\n        perView: 2,\r\n        gap: 30,\r\n      },\r\n      480: {\r\n        perView: 1,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n  }, []);\r\n\r\n  return (\r\n    <SectionWrapper id=\"team\">\r\n      <Container width=\"1360px\">\r\n        <Fade bottom>\r\n          <SectionHeader>\r\n            <Heading as=\"h5\" content={title} />\r\n            <Heading content={slogan} />\r\n          </SectionHeader>\r\n        </Fade>\r\n        <Fade bottom delay={30}>\r\n          <CarouselWrapper>\r\n            {loading ? (\r\n              <GlideCarousel\r\n                carouselSelector=\"team_carousel\"\r\n                options={glideOptions}\r\n                nextButton={<span className=\"next_arrow\" />}\r\n                prevButton={<span className=\"prev_arrow\" />}\r\n              >\r\n                <Fragment>\r\n                  {members.map(member => (\r\n                    <GlideSlide key={`project_key${member.id}`}>\r\n                      <TeamCard className=\"team_card\">\r\n                        <ImageWrapper className=\"image_wrapper\">\r\n                          <Image src={member.avatar} alt={member.name} />\r\n                        </ImageWrapper>\r\n                        <TextWrapper className=\"text_wrapper\">\r\n                          <div className=\"name_plate\">\r\n                            <Heading as=\"h3\" content={member.name} />\r\n                            <Text content={member.designation} />\r\n                          </div>\r\n                          {/* <ul className=\"social_links\">\r\n                            {member.social_links.map(item => (\r\n                              <li key={`social_link__key${item.id}`}>\r\n                                <Link href={item.url}>\r\n                                  <a aria-label=\"Check out our team member profile\">\r\n                                    {item.icon}\r\n                                  </a>\r\n                                </Link>\r\n                              </li>\r\n                            ))}\r\n                          </ul> */}\r\n                        </TextWrapper>\r\n                      </TeamCard>\r\n                    </GlideSlide>\r\n                  ))}\r\n                </Fragment>\r\n              </GlideCarousel>\r\n            ) : (\r\n              <CircleLoader className=\"alt\">\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n              </CircleLoader>\r\n            )}\r\n          </CarouselWrapper>\r\n        </Fade>\r\n      </Container>\r\n    </SectionWrapper>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AATA;AAJA;AAmBA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}