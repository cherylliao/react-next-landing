{"version":3,"file":"static/webpack/static/development/pages/index.js.de71a10fbaa12e341534.hot-update.js","sources":["webpack:///./containers/Interior/Navbar/index.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { openModal, closeModal } from '@redq/reuse-modal';\r\nimport { Icon } from 'react-icons-kit';\r\nimport { androidClose } from 'react-icons-kit/ionicons/androidClose';\r\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\r\nimport Drawer from 'reusecore/src/elements/Drawer';\r\nimport Button from 'reusecore/src/elements/Button';\r\nimport Logo from 'reusecore/src/elements/UI/Logo';\r\nimport HamburgMenu from 'common/src/components/HamburgMenu';\r\nimport ScrollSpyMenu from 'common/src/components/ScrollSpyMenu';\r\nimport { DrawerContext } from 'common/src/contexts/DrawerContext';\r\nimport { Container } from './navbar.style';\r\nimport SearchPanel from '../SearchPanel';\r\nimport LoginModal from '../LoginModal';\r\n// import Copyright from '../Copyright';\r\n\r\nimport { menuData } from 'common/src/data/Interior';\r\nimport logo from 'common/src/assets/image/interior/logo.svg';\r\n\r\nconst CloseModalButton = () => (\r\n  <Button\r\n    className=\"modalCloseBtn\"\r\n    variant=\"fab\"\r\n    onClick={() => closeModal()}\r\n    icon={<i className=\"flaticon-plus-symbol\" />}\r\n  />\r\n);\r\n\r\nconst CloseModalButtonAlt = () => (\r\n  <Button\r\n    className=\"modalCloseBtn alt\"\r\n    variant=\"fab\"\r\n    onClick={() => closeModal()}\r\n    icon={<i className=\"flaticon-plus-symbol\" />}\r\n  />\r\n);\r\n\r\nconst Navbar = ({ navbarStyle, logoStyle }) => {\r\n  const { state, dispatch } = useContext(DrawerContext);\r\n\r\n  const handleSearchModal = () => {\r\n    openModal({\r\n      config: {\r\n        className: 'search-modal',\r\n        disableDragging: true,\r\n        width: '100%',\r\n        height: '100%',\r\n        animationFrom: { transform: 'translateY(100px)' },\r\n        animationTo: { transform: 'translateY(0)' }, //\r\n        transition: {\r\n          mass: 1,\r\n          tension: 180,\r\n          friction: 26,\r\n        },\r\n      },\r\n      component: SearchPanel,\r\n      componentProps: {},\r\n      closeComponent: CloseModalButtonAlt,\r\n      closeOnClickOutside: false,\r\n    });\r\n  };\r\n\r\n  const handleLoginModal = () => {\r\n    openModal({\r\n      config: {\r\n        className: 'login-modal',\r\n        disableDragging: true,\r\n        width: '100%',\r\n        height: '100%',\r\n        animationFrom: { transform: 'translateY(100px)' },\r\n        animationTo: { transform: 'translateY(0)' },\r\n        transition: {\r\n          mass: 1,\r\n          tension: 180,\r\n          friction: 26,\r\n        },\r\n      },\r\n      component: LoginModal,\r\n      componentProps: {},\r\n      closeComponent: CloseModalButton,\r\n      closeOnClickOutside: false,\r\n    });\r\n  };\r\n\r\n  const toggleHandler = () => {\r\n    dispatch({\r\n      type: 'TOGGLE',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <NavbarWrapper {...navbarStyle}>\r\n      <Container>\r\n        {/* <Logo\r\n          href=\"/interior\"\r\n          logoSrc={logo}\r\n          title=\"Interior\"\r\n          logoStyle={logoStyle}\r\n        /> */}\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <Button\r\n            variant=\"textButton\"\r\n            onClick={handleSearchModal}\r\n            icon={<i className=\"flaticon-magnifying-glass\" />}\r\n            aria-label=\"search button\"\r\n          />\r\n          <Button\r\n            variant=\"textButton\"\r\n            onClick={handleLoginModal}\r\n            icon={<i className=\"flaticon-user\" />}\r\n            aria-label=\"registration button\"\r\n          />\r\n          <Drawer\r\n            width=\"420px\"\r\n            placement=\"right\"\r\n            drawerHandler={<HamburgMenu />}\r\n            open={state.isOpen}\r\n            toggleHandler={toggleHandler}\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className={state.isOpen ? 'active' : ''}\r\n              onClick={toggleHandler}\r\n              aria-label=\"drawer toggle button\"\r\n            >\r\n              <Icon icon={androidClose} />\r\n            </button>\r\n            <ScrollSpyMenu\r\n              menuItems={menuData}\r\n              drawerClose={true}\r\n              offset={-100}\r\n            />\r\n            {/* <Copyright /> */}\r\n          </Drawer>\r\n        </div>\r\n      </Container>\r\n    </NavbarWrapper>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  navbarStyle: PropTypes.object,\r\n  logoStyle: PropTypes.object,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  navbarStyle: {\r\n    minHeight: '70px',\r\n  },\r\n  logoStyle: {\r\n    width: '128px',\r\n    height: 'auto',\r\n  },\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAQA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAQA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAaA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AAUA;;;;A","sourceRoot":""}